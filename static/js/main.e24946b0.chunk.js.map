{"version":3,"sources":["resources/loadingicon.gif","components/Login.js","components/Choice.js","components/Writing.js","components/Voting.js","components/End.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","settings","value","displayPlayers","bind","assertThisInitialized","join","leave","start","change","a","obj","i","length","valueOf","updateGameBasedOnResponse","document","getElementById","player","username","console","log","request","type","action","name","connection","send","JSON","stringify","toggleInGame","alert","index","setCookie","rounds","data","game","numPlayers","push","react_default","createElement","className","key","players","Button","onClick","disabled","inGame","event","setState","_this2","Container","fluid","CardBody","Form","inline","Input","id","placeholder","Collapse","isOpen","index_esm","Component","Choice","_loop","block","quoteChoices","choose","waiting","src","loading","style","display","margin","height","alt","CardTitle","textAlign","indexOfIt","quotes","displayQuotes","Writing","quote","writing","onChange","e","writeQuote","target","wait","submitted","Voting","submittedQuotes","results","votes","j","vote","bonus","End","checkWinner","scores","Col","max","user","score","Game","phase","round","time","end","reset","next","checkCookie","updateIndex","resetState","WebSocket","onopen","onerror","error","onmessage","broadcast","parse","includes","keys","render","onclose","item","indexOf","exdays","arguments","undefined","d","Date","setTime","getTime","expires","toUTCString","cookie","cname","ca","split","c","charAt","substring","getCookie","Number","voteIndex","page","components_Login","components_Choice","components_Writing","components_Voting","components_End","ColorLinearProgress","withStyles","root","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","Row","sm","variant","marginTop","marginBottom","marginRight","marginLeft","borderRadiusBottom","displayScores","borderRadius","App","components_Game","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e24946b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingicon.0836a709.gif\";","import React, { Component } from 'react';\r\nimport { CardBody, Collapse, Form } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container, Input } from 'reactstrap'\r\n\r\nimport { FaSlidersH } from 'react-icons/fa';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import Slider from '@material-ui/lab/Slider';\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      settings : false,\r\n      value: 2\r\n    };\r\n    this.displayPlayers = this.displayPlayers.bind(this);\r\n    this.join = this.join.bind(this);\r\n    this.leave = this.leave.bind(this);\r\n    this.start = this.start.bind(this);\r\n    this.change = this.change.bind(this);\r\n  }\r\n\r\n  contains(a, obj) {\r\n    var i = a.length;\r\n    while (i--) {\r\n       if (a[i].valueOf() === obj.valueOf()) {\r\n           return true;\r\n       }\r\n    }\r\n    return false;\r\n  }\r\n  join(){\r\n    this.props.updateGameBasedOnResponse('username', document.getElementById(\"username\").value)\r\n    if(this.props.player.username.length===0) {\r\n      alert(\"Please choose a username.\");\r\n      return;\r\n    }\r\n    console.log(\"Joining game as \"+ this.props.player.username);\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'join',\r\n      'name': this.props.player.username,\r\n    };\r\n    this.props.connection.send(JSON.stringify(request));\r\n    this.props.toggleInGame();\r\n  }\r\n\r\n  leave(){\r\n    console.log(this.props.player.username + \" is leaving the game.\");\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'leave',\r\n      'name': this.props.player.username,\r\n      'index': this.props.player.index\r\n    };\r\n    this.props.updateGameBasedOnResponse('index', -1);\r\n    this.props.connection.send(JSON.stringify(request));\r\n    this.props.setCookie(\"\", \"\", -1);\r\n    this.props.toggleInGame();\r\n  }\r\n\r\n  start(){\r\n    console.log(\"The game is starting.\");\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'start',\r\n      'rounds': 3,\r\n      'name': this.props.player.username,\r\n      'index': this.props.player.index\r\n    };\r\n    this.props.connection.send(JSON.stringify(request));\r\n  }\r\n\r\n  displayPlayers(){\r\n    let data = [];\r\n    if(this.props.game.numPlayers>0)\r\n      data.push(<div className=\"text\" key=\"ingame\">{this.props.game.numPlayers} players in game:</div>)\r\n    else data.push(<div className=\"text\" key=\"roomempty\">Room is empty.</div>)\r\n    for(let i = 0; i<this.props.game.numPlayers; i++) {\r\n      data.push(<div className=\"text\" key={i}>{this.props.game.players[i] }</div>)\r\n    }\r\n    return(\r\n      <div className=\"username curved\">{data}</div>\r\n    ) \r\n  }\r\n\r\n  displayStart(){\r\n    return(\r\n      this.props.player.index===0 \r\n      ?\r\n        <Button\r\n            onClick={this.start}\r\n            disabled={!this.props.inGame}\r\n          >\r\n            Start Game!\r\n        </Button>\r\n      : \"\"\r\n        );\r\n  }\r\n\r\n \r\n  change(event, value){\r\n    this.setState({ value })\r\n  }\r\n\r\n  render() {\r\n    // let ShortSlider = withStyles({\r\n    //   root: {\r\n    //     width: 300,\r\n    //   },\r\n    //   track: {\r\n    //     backgroundColor:  '#0accab'\r\n    //   },\r\n    //   thumb: {\r\n    //     backgroundColor:  '#0accab'\r\n    //   },\r\n    // })(Slider);\r\n\r\n    return (\r\n      <Container fluid>\r\n        <CardBody className=\"text\">Choose a username and join the game!</CardBody>\r\n        <Form inline className=\"centered\">\r\n          <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder= {this.props.inGame ? this.props.player.username : \"Username\" }\r\n              disabled={this.props.inGame}\r\n          />\r\n          <br/><br/>\r\n          \r\n          <Button\r\n            className=\"join\"\r\n            onClick={this.props.inGame ? this.leave : this.join}\r\n          >\r\n            {this.props.inGame ? \"Leave\" : \"Join\"}\r\n          </Button>\r\n          \r\n          <Collapse isOpen={this.props.player.index===0 && this.props.inGame}>\r\n            \r\n            <Button\r\n                className=\"join\"\r\n                onClick={() => this.setState({'settings': !this.state.settings})}\r\n                disabled\r\n              >\r\n                <FaSlidersH/>\r\n            </Button>\r\n            <Button\r\n                className=\"join\"\r\n                onClick={this.start}\r\n                disabled={this.props.game.numPlayers<2}\r\n              >\r\n                Start Game!\r\n            </Button>\r\n        </Collapse>\r\n        </Form>    \r\n        <Collapse isOpen={this.state.settings}>\r\n          <p className='slider'>{this.state.value}</p>\r\n          <div className=\"slider\">\r\n          \r\n            {/* <ShortSlider\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              className={\"slider\"}\r\n              value={this.state.value}\r\n              onChange={this.change}\r\n            /> */}\r\n          </div>\r\n        </Collapse>\r\n        <CardBody>\r\n          {this.displayPlayers()}\r\n        </CardBody>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { CardBody, CardTitle } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container } from 'reactstrap'\r\n\r\nimport loading from '../resources/loadingicon.gif'\r\n\r\nclass Choice extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  displayQuotes(){    \r\n    // while(typeof this.props.game.quoteChoices === 'undefined');\r\n    let data = [];\r\n\r\n    for(let i in this.props.game.quoteChoices) {\r\n      let index = i;\r\n      data.push(\r\n              <Button block className=\"curved\"\r\n                key={\"quote_\"+i}\r\n                onClick={() => {\r\n                  console.log(this.props.game.quoteChoices[i])\r\n                  this.props.choose(this.props.game.quoteChoices[index])\r\n                }}\r\n                >\r\n                <i>{this.props.game.quoteChoices[i][0]}</i>\r\n                <br/>\r\n                {this.props.game.quoteChoices[i][1] +\"... \"+ this.props.game.quoteChoices[i][2]}\r\n              </Button>)\r\n    }\r\n    return data;\r\n  }\r\n  screen() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <CardTitle style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</CardTitle>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <div className=\"text\"><i>Choose one of the following quotes.</i></div>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n    return(\r\n      (this.props.game.indexOfIt === this.props.player.index)\r\n      ? quotes\r\n      : waiting\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className=\"text\" style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</div>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <div className=\"text\"><i>Choose one of the following quotes.</i></div>\r\n        <br/>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n\r\n    return (\r\n      <Container fluid >\r\n        {(this.props.game.indexOfIt === this.props.player.index)\r\n          ? quotes\r\n          : waiting}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Choice;","import React, { Component } from 'react';\r\nimport { CardBody, CardTitle } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container, Input, Form } from 'reactstrap'\r\n\r\nimport loading from '../resources/loadingicon.gif'\r\n\r\nclass Writing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  displayQuotes(){\r\n    let quotes = [ [\"Origin\",\"Quote 1\"], [\"Origin\",\"Quote 2\"], [\"Origin\",\"Quote 3\"]];\r\n    let data = [];\r\n    for (let i = 0; i<quotes.length; i++){\r\n      data.push(\r\n        <Button block>\r\n          <i>{quotes[i][0]}</i>\r\n          <br/>\r\n          {quotes[i][1]}\r\n        </Button>\r\n      )\r\n    }\r\n    return data;\r\n  }\r\n  screen() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <CardTitle style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</CardTitle>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <CardTitle>Choose one of the following quotes.</CardTitle>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n    return(\r\n      (this.props.game.indexOfIt === this.props.player.index)\r\n      ? quotes\r\n      : waiting\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className=\"text\" style={{'textAlign': 'center'}}>Waiting for other players to complete their quotes.</div>\r\n      </CardBody>\r\n    let quote = this.props.game.quote;\r\n    const writing =\r\n      <CardBody>\r\n        <div className=\"text\">\r\n          <i>Finish the quote below and fool other players into believing yours is the original!<br/>Do your best to make your quote sound authentic.</i>\r\n        </div>\r\n        <br/>\r\n        <div className=\"text\">\r\n          <i>{quote[0]}</i>\r\n          <br/>\r\n          {quote[1]}...\r\n        </div>\r\n        <Form inline className=\"centered full\">\r\n          <Input \r\n            id=\"username\"\r\n            type='text'\r\n            placeholder='...'\r\n            onChange={(e) => this.props.writeQuote(e.target.value)}\r\n          />\r\n          <br/><br/><br/>\r\n          <Button\r\n            className=\"join\"\r\n            onClick={() =>{ this.props.choose(this.props.player.quote); wait=true;}}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    \r\n    let wait = (this.props.game.indexOfIt === this.props.player.index) || (this.props.game.submitted[this.props.player.index]);\r\n    return (\r\n      <Container fluid >\r\n        { wait\r\n          ? waiting\r\n          : writing}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Writing;","import React, { Component } from 'react';\r\nimport { CardBody } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container } from 'reactstrap'\r\n\r\nimport loading from '../resources/loadingicon.gif'\r\n// import { FaRegCalendarCheck } from 'react-icons/fa';\r\n\r\nclass Voting extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  displayQuotes(){\r\n    let data = [];\r\n    for(let i in this.props.game.submittedQuotes) {\r\n      let index = this.props.game.submittedQuotes[i][3]; //index not working!!\r\n      if(index===this.props.player.index && !this.props.game.results) continue; \r\n      let votes = [];\r\n      for(let j = 0; j<this.props.game.votes[index]; j++) {\r\n        votes.push(\"❚\")\r\n      }\r\n      data.push(\r\n        <Button block\r\n          className={(this.props.game.results && this.props.game.indexOfIt===index) ? \"correct\" : \"\"}\r\n          key={\"voting_\"+i}\r\n          onClick={() => {\r\n            this.props.vote(index, (this.props.game.indexOfIt === this.props.player.index))}}\r\n          disabled={this.props.game.results}\r\n          >\r\n            {((this.props.game.indexOfIt===this.props.player.index )|| this.props.game.results) \r\n            ? <div className=\"star\">{this.props.game.results ? votes : \"\"} {this.props.game.bonus[index] ? \"★\" : \"\"}</div> \r\n            : \"\"}\r\n          <i>{this.props.game.submittedQuotes[i][0]}</i>\r\n          <br/>\r\n          {this.props.game.submittedQuotes[i][1] +\"... \"+ this.props.game.submittedQuotes[i][2]}\r\n        </Button>)\r\n    }\r\n    \r\n    return data;\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className='text' style={{'textAlign': 'center'}}>Waiting for other players to vote.</div>\r\n      </CardBody>\r\n\r\n    return ( \r\n          \r\n      <Container fluid >\r\n        { (this.props.game.submitted[this.props.player.index] && !this.props.game.results) ? \r\n          waiting : \r\n          <CardBody>\r\n            <div className=\"text\"><i>{ (this.props.game.results)\r\n            ? \"❚ = 1 Vote, ★ = Bonus Point\"\r\n            : (this.props.game.indexOfIt === this.props.player.index) \r\n            ? \"Award bonus points to the players' quotes.\"\r\n            : \"Vote for the quote below which you believe to be the original.\" }</i></div>\r\n            <br/>\r\n            {this.displayQuotes()}\r\n          </CardBody>\r\n        }\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Voting;","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container } from 'reactstrap'\r\n\r\n// import loading from '../../resources/loadingicon.gif'\r\n\r\nclass End extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.checkWinner = this.checkWinner.bind(this)\r\n  }\r\n  displayScores(){\r\n    let data = [];\r\n    for (let i = 0; i<this.state.game.scores.length; i++) {\r\n      data.push(<Col key={this.state.game.players[i]}>{this.state.game.players[i] +\": \" + this.state.game.scores[i]}</Col>)\r\n    }\r\n    return(\r\n      <Container>\r\n      <div className=\"username curved\">\r\n        {data}\r\n      </div>\r\n      </Container>\r\n    )\r\n  }\r\n  displayPlayerScores(){\r\n    let data = [];\r\n    for(let i in this.props.game.submittedQuotes) {\r\n      let index = this.props.game.submittedQuotes[i][3]; //index not working!!\r\n      if(index===this.props.player.index) continue;\r\n      data.push(\r\n        <Button block\r\n          key={\"voting_\"+i}\r\n          onClick={() => {\r\n            this.props.vote(index, (this.props.game.indexOfIt === this.props.player.index))}}\r\n          >\r\n          {(this.props.game.indexOfIt===this.props.player.index\r\n            && this.props.game.bonus[index]) \r\n            ? <div className=\"star\">&#9733;</div> \r\n            : \"\"}\r\n          <i>{this.props.game.submittedQuotes[i][0]}</i>\r\n          <br/>\r\n          {this.props.game.submittedQuotes[i][1] +\"... \"+ this.props.game.submittedQuotes[i][2]}\r\n        </Button>)\r\n    }\r\n    \r\n    return data;\r\n  }\r\n\r\n  checkWinner(){\r\n    let max = {'user': this.props.game.players[0], 'score': this.props.game.scores[0]};\r\n    for (let i = 0; i<this.props.game.scores.length; i++) {\r\n      if(this.props.game.scores[i]>max['score'])\r\n      max={'user': this.props.game.players[i], 'score': this.props.game.scores[i]};\r\n    }\r\n    return max;\r\n  }\r\n\r\n\r\n  render() {\r\n    let max= this.checkWinner()\r\n    return ( \r\n      <Container fluid >\r\n        <div className=\"text\">\r\n          <br/>\r\n          <i>{max['user']}</i> won with a score of {max['score']+\"!\"}\r\n          <br/><br/>\r\n          Wondering how ties are decided? It goes to the person who \r\n          joins the game first. Late to the party? Sucks to suck.\r\n        </div>\r\n        <br/>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default End;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nimport '../styles/Game.scss'\r\nimport Login from './Login.js'\r\nimport Choice from './Choice.js'\r\nimport Writing from './Writing.js'\r\nimport Voting from './Voting.js'\r\nimport End from './End.js'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\nimport { FaPenFancy as Pen } from 'react-icons/fa'\r\n\r\n\r\nclass Game extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      game: {\r\n        numPlayers: 0,\r\n        phase: -1,\r\n        round: 0,\r\n        players: [],\r\n        scores: [],\r\n        quote: [],\r\n        quotes: [],\r\n        votes: [],\r\n        results: false,\r\n        time: null,\r\n        submitted: [],\r\n        bonus: [],\r\n        indexOfIt: -1\r\n      },\r\n      results: {\r\n        \r\n      },\r\n      player: {\r\n        quote: [],\r\n        username: \"\",\r\n        index: -1\r\n      },\r\n      inGame: false\r\n    };\r\n    this.connection = null;\r\n    this.choose = this.choose.bind(this)\r\n    this.vote = this.vote.bind(this)\r\n    this.end = this.end.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n    this.next = this.next.bind(this)\r\n    this.setCookie = this.setCookie.bind(this);\r\n    this.checkCookie = this.checkCookie.bind(this);\r\n    this.updateGameBasedOnResponse = this.updateGameBasedOnResponse.bind(this);\r\n    this.updateIndex = this.updateIndex.bind(this);\r\n    this.writeQuote = this.writeQuote.bind(this);\r\n    this.resetState = this.resetState.bind(this);\r\n    this.toggleInGame = this.toggleInGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.connection = new WebSocket('ws://localhost:4444');\r\n    this.connection.onopen = function () {\r\n      console.log('Connected!');\r\n    };\r\n\r\n    // Log errors\r\n    this.connection.onerror = function (error) {\r\n      console.log('WebSocket Error ' + error);\r\n      alert(\"Cannot reach server!\")\r\n    };\r\n\r\n    // Log messages from the server\r\n    this.connection.onmessage = function (e) {\r\n      // console.log('Server: ' + e.data);\r\n      let broadcast = JSON.parse(e.data);\r\n      if(!broadcast['players'].includes(this.state.player.username)) this.setState({inGame: false});\r\n      let keys = Object.keys(broadcast);\r\n      if (broadcast['end']) this.resetState();\r\n      else {\r\n        for(let i = 0; i<keys.length; i++) {\r\n          if(this.state.game.phase !== 1 && keys[i]==='quote') continue;\r\n          this.updateGameBasedOnResponse(keys[i], broadcast[keys[i]])\r\n        }\r\n      }\r\n      this.render();\r\n    }.bind(this);\r\n\r\n    this.connection.onclose = function (e) {\r\n      console.log('Connection lost');\r\n      //THIS FUNCTION IS CALLED ON REFRESH IN FIREFOX BUT NOT CHROME\r\n      // DELETING COOKIES BREAKS FUNCTIONALITY IN FIREFOX\r\n      // document.cookie = \"username=;expires=Wed, 14 Jun 2017 07:00:00 GMT;path=/\";\r\n      // document.cookie = \"index=;expires=Wed, 14 Jun 2017 07:00:00 GMT;path=/\";\r\n    };\r\n    this.checkCookie();\r\n  }\r\n\r\n  updateGameBasedOnResponse(key, value) {\r\n    let state = this.state;\r\n    let item = 'game'\r\n    if(key === 'username') {\r\n      this.setCookie(value, 365);\r\n      item = 'player';\r\n    }\r\n    state[item][key] = value;\r\n    this.setState(state);\r\n    this.updateIndex();\r\n  }\r\n\r\n  updateIndex(){\r\n    let state = this.state;\r\n    state.player.index = this.state.game.players.indexOf(this.state.player.username);\r\n    this.setState(state);\r\n  }\r\n\r\n  writeQuote(quote) {\r\n    let state = this.state;\r\n    state.player.quote=state.game.quote;\r\n    state.player.quote[2]=quote;\r\n    this.setState(state);\r\n  }\r\n  resetState() {\r\n    let state = {\r\n      game: {\r\n        numPlayers: 0,\r\n        phase: -1,\r\n        players: [],\r\n        scores: [],\r\n        quote: [],\r\n        quotes: [],\r\n        time: null,\r\n        indexOfIt: -1\r\n      },\r\n      player: {\r\n        quote: [],\r\n        username: \"\",\r\n        index: -1\r\n      },\r\n      inGame: false\r\n    };\r\n    this.setState(state);\r\n  }\r\n\r\n  toggleInGame() {\r\n    this.setState({inGame: !this.state.inGame})\r\n\r\n  }\r\n  setCookie(username, exdays=0) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = (exdays===0) ? \"\" : \"expires=\"+d.toUTCString() + \";path=/\";\r\n    document.cookie = \"username=\" + username + \";\" + expires;\r\n    // document.cookie = \"index=\" + index + \";\" + expires;\r\n  }\r\n  getCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let ca = document.cookie.split(';');\r\n    for(let i = 0; i < ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n  checkCookie() {\r\n    let user = this.getCookie(\"username\");\r\n    let index = Number(this.getCookie(\"index\"));\r\n    if (user !== \"\") {\r\n      let player = this.state.player;\r\n      player.username = user;\r\n      player.index = index;\r\n      this.setState(player);\r\n      this.setState({inGame: true});\r\n    }\r\n  }\r\n  choose(quote){\r\n    quote[3] = this.state.player.index;\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'choose',\r\n      'quote': quote,\r\n      'name': this.state.player.username,\r\n      'index': this.state.player.index\r\n    };\r\n    this.connection.send(JSON.stringify(request));\r\n  }\r\n  vote(index, bonusPoints=false){\r\n    let request = {\r\n      'type': 'request',\r\n      'action': bonusPoints ? 'bonus' : 'vote',\r\n      'voteIndex': index,\r\n      'name': this.state.player.username,\r\n      'index': this.state.player.index\r\n    };\r\n    this.connection.send(JSON.stringify(request));\r\n    \r\n  }\r\n  end(){\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'end',\r\n      'name': this.state.player.username,\r\n      'index': this.state.player.index\r\n    };\r\n    this.connection.send(JSON.stringify(request));\r\n  }\r\n  next(){\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'next',\r\n      'name': this.state.player.username,\r\n      'index': this.state.player.index\r\n    };\r\n    this.connection.send(JSON.stringify(request));\r\n  }\r\n  reset(){\r\n    this.resetState();\r\n    this.setCookie(\"\", \"\", -1);\r\n    console.log(\"The game is ending.\");\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'reset',\r\n      'name': this.state.player.username,\r\n      'index': this.state.player.index\r\n    };\r\n    this.connection.send(JSON.stringify(request));\r\n  }\r\n  displayScores(){\r\n    let data = [];\r\n    for (let i = 0; i<this.state.game.scores.length; i++) {\r\n      data.push(<Col key={this.state.game.players[i]+\"_\"+i}>{this.state.game.players[i] +\": \" + this.state.game.scores[i]}</Col>)\r\n    }\r\n    return(\r\n      <Container>\r\n      <div className=\"username curved\">\r\n        {data}\r\n      </div>\r\n      </Container>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    const page = \r\n      this.state.inGame && !this.state.game.players.includes(this.state.player.username) ?\r\n      <div>Hi</div>\r\n      :   \r\n      this.state.game.phase === -1 ? \r\n        <Login  \r\n          updateGameBasedOnResponse={this.updateGameBasedOnResponse}\r\n          player={this.state.player}\r\n          game={this.state.game}\r\n          inGame={this.state.inGame}\r\n          toggleInGame={this.toggleInGame}\r\n          setCookie={this.setCookie}\r\n          connection={this.connection}\r\n        /> :\r\n        this.state.game.phase === 0 && this.state.inGame ? \r\n        <Choice\r\n          choose={this.choose}\r\n          updateGameBasedOnResponse={this.updateGameBasedOnResponse}\r\n          player={this.state.player}\r\n          game={this.state.game}\r\n          quoteChoices={this.state.quoteChoices}\r\n          connection={this.connection}\r\n        /> :\r\n        this.state.game.phase === 1 && this.state.inGame ? \r\n        <Writing\r\n          updateGameBasedOnResponse={this.updateGameBasedOnResponse}\r\n          player={this.state.player}\r\n          choose={this.choose}\r\n          writeQuote={this.writeQuote}\r\n          game={this.state.game}\r\n          connection={this.connection}\r\n        /> :\r\n        this.state.game.phase === 2 && this.state.inGame ? \r\n        <Voting\r\n          vote={this.vote}\r\n          updateGameBasedOnResponse={this.updateGameBasedOnResponse}\r\n          player={this.state.player}\r\n          game={this.state.game}\r\n          connection={this.connection}\r\n          next={this.next}\r\n        /> :\r\n        this.state.game.phase === 3 && this.state.inGame ? \r\n        <End\r\n          player={this.state.player}\r\n          game={this.state.game}\r\n          connection={this.connection}\r\n        />\r\n      : <div className=\"waiting\">Please wait for the current game to finish!</div>;\r\n\r\n    const ColorLinearProgress = withStyles({\r\n      root: {\r\n        height: 8\r\n      },\r\n      colorPrimary: {\r\n        backgroundColor: '#232323',\r\n      },\r\n      barColorPrimary: {\r\n        backgroundColor: '#0accab',\r\n      },\r\n    })(LinearProgress);\r\n\r\n    let rounds = []\r\n\r\n    for(let i = 1; i<=this.state.game.rounds; i++){\r\n      rounds.push(<div key={\"round_\"+i} className={(i===this.state.game.round) ? \"round current\" : \"round\"}>{i}</div>)\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"title\">\r\n        <Row>\r\n          <Col sm=\"3\"></Col>\r\n          \r\n          <Col sm=\"6\">\r\n            <Pen className=\"icon\"/> Wordsmyth\r\n          </Col>\r\n          <Col sm=\"3\">\r\n            <div className=\"round\">\r\n              {this.state.game.phase!==-1 || this.state.game.phase!==3 ? rounds : \"\"}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n        <div className=\"username\">\r\n          {(this.state.game.phase !==-1) ? this.state.player.username : <br/>}\r\n        </div>\r\n        <ColorLinearProgress className=\"timer\" variant=\"determinate\" value={this.state.inGame && this.state.game.phase !==3 ? 100*this.state.game.time/60 : 100} barColorPrimary='#0accab'/>\r\n        <div>      \r\n          {page}\r\n          {(this.state.game.results && this.state.player.index===0) ? \r\n            <Button \r\n              className=\"shadow\"\r\n              style={{display:'block', marginTop: '0px', marginBottom: '20px' ,marginRight:'auto', marginLeft:'auto',borderRadiusBottom:'40px'}}\r\n              onClick={this.next}>\r\n                Next Round\r\n            </Button> \r\n            : \"\"}\r\n          {this.state.inGame ? this.displayScores() : \"\"}  \r\n          {(this.state.game.phase !==-1 && this.state.inGame) ?\r\n          <div>\r\n            <br/>\r\n            \r\n            <Button\r\n              className=\"shadow\"\r\n              style={{marginLeft: '35px', marginBottom: '20px', borderRadius:'40px'}}\r\n              onClick={this.state.game.phase === 3 ? this.reset : this.end}\r\n              disabled={this.state.game.phase === -1}\r\n            >\r\n              {this.state.game.phase === 3 ? \"Play Again!\" : \"End Game\"}\r\n            </Button>\r\n          </div>\r\n          :\r\n          \"\"}  \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Game;","import React from 'react';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}